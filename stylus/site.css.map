{"version":3,"sources":["node_modules/axis/axis/reset.styl","node_modules/axis/node_modules/nib/lib/nib/flex.styl","node_modules/axis/node_modules/nib/lib/nib/vendor.styl","node_modules/axis/node_modules/nib/lib/nib/border.styl","node_modules/axis/node_modules/nib/lib/nib/overflow.styl","node_modules/axis/axis/typography.styl","node_modules/axis/axis/utilities.styl","node_modules/axis/axis/vendor.styl","node_modules/axis/axis/interaction.styl","node_modules/axis/node_modules/nib/lib/nib/clearfix.styl","assets/stylus/_base/colors.styl","assets/stylus/_base/globals.styl","node_modules/jeet/stylus/jeet/_grid.styl","node_modules/rupture/rupture/index.styl","assets/stylus/_base/typography.styl","assets/stylus/_base/animations.styl","assets/stylus/_components/footer.styl","assets/stylus/_components/header.styl","assets/stylus/_components/buttons.styl","node_modules/axis/axis/buttons.styl","assets/stylus/_pages/error.styl","assets/stylus/_pages/index.styl"],"names":[],"mappings":"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","sourcesContent":["// -----\n// Reset\n// -----\n\n// global-reset delegated to nib\n\nsupport-for-ie ?= true\n\n// Mixin: Normalize CSS\n// Based on v3.0.1 https://github.com/necolas/normalize.css\n\nnormalize-css()\n  html\n    font-family: sans-serif\n    -ms-text-size-adjust: 100%\n    -webkit-text-size-adjust: 100%\n\n  body\n    margin: 0\n\n  article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary\n    display: block\n\n  audio, canvas, progress, video\n    display: inline-block\n    vertical-align: baseline\n\n  audio:not([controls])\n    display: none\n    height: 0\n\n  [hidden], template\n    display: none\n\n  a\n    background: transparent\n\n    &:active, &:hover\n      outline: 0\n\n  abbr[title]\n    border-bottom: 1px dotted\n\n  b, strong\n    font-weight: bold\n\n  dfn\n    font-style: italic\n\n  h1\n    font-size: 2em\n    margin: 0.67em 0\n\n  mark\n    background: #ff0\n    color: #000\n\n  small\n    font-size: 80%\n\n  sub, sup\n    font-size: 75%\n    line-height: 0\n    position: relative\n    vertical-align: baseline\n\n  sup\n    top: -0.5em\n\n  sub\n    bottom: -0.25em\n\n  img\n    border: 0\n\n  svg:not(:root)\n    overflow: hidden\n\n  figure\n    margin: 1em 40px\n\n  hr\n    -moz-box-sizing: content-box\n    box-sizing: content-box\n    height: 0\n\n  pre\n    overflow: auto\n\n  code, kbd, pre, samp\n    font-family: monospace, monospace\n    font-size: 1em\n\n  button, input, optgroup, select, textarea\n    color: inherit\n    font: inherit\n    margin: 0\n\n  button\n    overflow: visible\n\n  button, select\n    text-transform: none\n\n  button, html input[type=\"button\"], input[type=\"reset\"], input[type=\"submit\"]\n    -webkit-appearance: button\n    cursor: pointer\n\n  button[disabled], html input[disabled]\n    cursor: default\n\n  button::-moz-focus-inner, input::-moz-focus-inner\n    border: 0\n    padding: 0\n\n  input\n    line-height: normal\n\n  input[type=\"checkbox\"], input[type=\"radio\"]\n    box-sizing: border-box\n    padding: 0\n\n  input[type=\"number\"]::-webkit-inner-spin-button, input[type=\"number\"]::-webkit-outer-spin-button\n    height: auto\n\n  input[type=\"search\"]\n    -webkit-appearance: textfield\n    -moz-box-sizing: content-box\n    -webkit-box-sizing: content-box\n    box-sizing: content-box\n\n  input[type=\"search\"]::-webkit-search-cancel-button, input[type=\"search\"]::-webkit-search-decoration\n    -webkit-appearance: none\n\n  fieldset\n    border: 1px solid #c0c0c0\n    margin: 0 2px\n    padding: 0.35em 0.625em 0.75em\n\n  legend\n    border: 0\n    padding: 0\n\n  textarea\n    overflow: auto\n\n  optgroup\n    font-weight: bold\n\n  table\n    border-collapse: collapse\n    border-spacing: 0\n\n  td, th\n    padding: 0\n\n// Mixin: Fluid Media\n// Makes your img, video, and iframe tags responsive to their parent container.\n\nfluid-media()\n  img,\n  video,\n  iframe\n    max-width: 100%\n    height: auto\n    border: 0\n    -ms-interpolation-mode: bicubic\n    display: block\n","/*\n * Vendor \"display: flex\" support with fallback to obsolete versions.\n */\n\nflex-version ?= box flex\n\n//\n// 1. Display values\n//    - http://www.w3.org/TR/css3-flexbox/#flex-containers\n//\ndisplay(type, args...)\n  if flex == type || inline-flex == type\n    if box in flex-version\n      if flex == type\n        display: -ms-flexbox args\n        display: vendor-value(box args, only: moz webkit)\n      else\n        display: -ms-inline-flexbox args\n        display: vendor-value(inline-box args, only: moz webkit)\n    if flex in flex-version\n      display: vendor-value(arguments, only: webkit official) // overwrites old webkit\n  else\n    display: arguments\n\n/*\n * New syntax for browsers like Google Chrome.\n * Plus a translation to the old syntax, if possible.\n */\n\n\n//\n// 5. Ordering and Orientation\n//    - http://www.w3.org/TR/css3-flexbox/#ordering-and-orientation\n//\n-flex-obsolete-direction(direction)\n  if box in flex-version\n    if row-reverse == direction || column-reverse == direction\n      vendor('box-direction', reverse, ignore: ms official)\n\n    if row == direction || row-reverse == direction\n      vendor('box-orient', horizontal, ignore: ms official)\n    else if column == direction || column-reverse == direction\n      vendor('box-orient', vertical, ignore: ms official)\n\n-flex-obsolete-wrap(value)\n  if box in flex-version\n    // WARN: wrap-reverse does not have a box equivalent. This will render in different manners\n    //    on box vs. flex values.\n    if 'wrap' == value || wrap-reverse == value\n      vendor('box-lines', multiple, ignore: ms official)\n    else if nowrap == value\n      vendor('box-lines', single, ignore: ms official)\n\nflex-direction(direction)\n  // obsolete\n  -flex-obsolete-direction(direction)\n\n  // new\n  if flex in flex-version\n    vendor('flex-direction', arguments, only: webkit ms official)\n\nflex-wrap(value)\n  // obsolete\n  -flex-obsolete-wrap(value)\n\n  if flex in flex-version\n    vendor('flex-wrap', arguments, only: webkit ms official)\n\nflex-flow()\n  // obsolete\n  -flex-obsolete-direction(arguments[0])\n  -flex-obsolete-direction(arguments[1])\n  -flex-obsolete-wrap(arguments[0])\n  -flex-obsolete-wrap(arguments[1])\n\n  // new\n  if flex in flex-version\n    vendor('flex-flow', arguments, only: webkit ms official)\n\n\norder()\n  // obsolete\n  if box in flex-version\n    vendor('box-ordinal-group', arguments, ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-order', arguments, only: ms)\n    vendor('order', arguments, only: webkit official)\n\n\n//\n// 7. Flexibility\n//    - http://www.w3.org/TR/css3-flexbox/#flexibility\n//\nflex-grow(growth)\n  // obsolete\n  if box in flex-version\n    vendor('box-flex', growth)\n\n  // new\n  if flex in flex-version\n    vendor('flex-grow', arguments, only: webkit official)\n\nflex-basis()\n  if flex in flex-version\n    vendor('flex-basis', arguments, only: webkit official)\n\nflex-shrink()\n  if flex in flex-version\n    vendor('flex-shrink', arguments, only: webkit official)\n\nflex(growth)\n\n  // obsolete\n  if box in flex-version\n    shrink = 1\n\n    if none == growth || initial == growth\n      // Well known values\n      shrink = 0 if none == growth\n      growth = 0\n    else if is-width(growth) == true\n      // Basis is defined as the first parameter\n      growth = arguments[1] || 0\n      shrink = arguments[2] if 3 <= length(arguments)\n    else if arguments[1] && is-width(arguments[1]) == false\n      // Growth is first and shrink is second\n      shrink = arguments[1]\n\n    // Since we can't make the distinction between growing and shrinking in the box model, take\n    // the one that provides the most flexibility.\n    vendor('box-flex', max(growth, shrink), ignore: ms)\n\n  // new\n  if flex in flex-version\n    vendor('flex', arguments, only: webkit ms official)\n\n\n// converts the justification alignment\n-convert-justify(align)\n  if flex-start == align\n    return start\n  else if flex-end == align\n    return end\n  else if space-around == align\n    return distribute\n  else if space-between == align\n    return justify\n  else\n    return align\n\n//\n// 8. Alignment\n//    - http://www.w3.org/TR/css3-flexbox/#alignment\n//\njustify-content(align)\n  // obsolete\n  if box in flex-version\n    vendor('box-pack', -convert-justify(align), ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-pack', -convert-justify(align), only: ms)\n    vendor('justify-content', align, only: webkit official)\n\nalign-content(align)\n  // WARN: Obsolete spec does not allow for adjustment here\n  if flex in flex-version\n    vendor('flex-line-pack', -convert-justify(align), only: ms)\n    vendor('align-content', align, only: webkit official)\n\n// converts alignment from 'flex' to normal value\n-convert-alignment(align)\n  if flex-start == align\n    return start\n  else if flex-end == align\n    return end\n  else\n    return align\n\nalign-items(align)\n  // obsolete\n  if box in flex-version\n    vendor('box-align', -convert-alignment(align), ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-align', -convert-alignment(align), only: ms)\n    vendor('align-items', arguments, only: webkit official)\n\nalign-self(align)\n  // WARN: Obsolete spec does not allow for overriding alignment on individual items.\n  if flex in flex-version\n    vendor('align-self', align, only: webkit official)\n    vendor('flex-item-align', -convert-alignment(align), only: ms)\n","use('../nodes/vendor-helpers.js')\n@import 'config'\n\n/*\n * Alias \"nowrap\" as \"no-wrap\".\n */\n\nno-wrap = unquote('nowrap')\n\n/*\n * Helper to find out if a given value is a width\n */\n\nis-width(val)\n  if auto == val\n    return true\n  else if val && 'unit' == type(val)\n    // Stylus does not short circuit so we need to perform this as a distinct\n    // operation to prevent errors\n    return '' != unit(val)\n  return false\n\n/*\n * Vendor support for the given prop / arguments, optionally specifying the\n * only prefixes to utilize, or those which should be ignored.\n */\n\nvendor(prop, args, only = null, ignore = null, vendor-property = true)\n  need_normalize = !vendor-property or prop in ('transition' 'transition-property' 'border-image' 'border-image-slice')\n  for prefix in vendor-prefixes\n    unless (only and !(prefix in only)) or (ignore and prefix in ignore)\n      if official == prefix\n        if need_normalize\n          {prop}: normalize(prop,('%s' % args))\n        else\n          {prop}: args\n      else\n        newprop = prop\n        newprop = '-' + prefix + '-' + prop if vendor-property\n\n        if need_normalize\n          {newprop}: normalize(prop,('%s' % args),prefix)\n        else\n          {newprop}: args\n/*\n * Vendorize the given value.\n */\n\nvendor-value(arg, only = null, ignore = null)\n  prop = current-property[0]\n  for prefix in vendor-prefixes\n    unless (only and !(prefix in only)) or (ignore and prefix in ignore) or official == prefix\n      add-property(prop, '-%s-%s' % (prefix arg))\n  arg\n\n/*\n * Vendor \"box-shadow\" support.\n */\n\nbox-shadow()\n  vendor('box-shadow', arguments, only: webkit official)\n\n/*\n * Vendor \"user-select\" support.\n */\n\nuser-select()\n  vendor('user-select', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"column-count\" support.\n */\n\ncolumn-count()\n  vendor('column-count', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-gap\" support.\n */\n\ncolumn-gap()\n  vendor('column-gap', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule\" support.\n */\n\ncolumn-rule()\n  vendor('column-rule', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-color\" support.\n */\n\ncolumn-rule-color()\n  vendor('column-rule-color', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-width\" support.\n */\n\ncolumn-rule-width()\n  vendor('column-rule-width', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-style\" support.\n */\n\ncolumn-rule-style()\n  vendor('column-rule-style', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-width\" support.\n */\n\ncolumn-width()\n  vendor('column-width', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-span\" support.\n */\n\ncolumn-span()\n  vendor('column-span', arguments, only: webkit official)\n\n/*\n * Vendor \"column-fill\" support.\n */\n\ncolumn-fill()\n  vendor('column-fill', arguments, only: moz)\n\n/*\n * Legacy syntax support for background-clip and background-origin\n */\n\nlegacy-bg-values(property, args)\n  legacy_args = ()\n  importance = unquote('')\n  for subargs in args\n    for arg in subargs\n      if arg in (border-box padding-box content-box)\n        arg = unquote('border')  if arg == border-box\n        arg = unquote('padding') if arg == padding-box\n        arg = unquote('content') if arg == content-box\n      if arg != '!important'\n        push(legacy_args,arg)\n      else\n        importance = !important\n  vendor(property, unquote(join(', ',legacy_args)) importance, only: moz webkit)\n\n/*\n * Vendor \"background-clip\" support.\n */\n\nbackground-clip()\n  if arguments[0] == text\n    vendor('background-clip', arguments, only: webkit)\n  else\n    legacy-bg-values('background-clip', arguments)\n    background-clip: arguments\n\n/*\n * Vendor \"background-origin\" support.\n */\n\nbackground-origin()\n  legacy-bg-values('background-origin', arguments)\n  background-origin: arguments\n\n/*\n * Vendor \"background-size\" support.\n */\n\nbackground-size()\n  vendor('background-size', arguments, only: webkit moz official)\n\n/*\n * Vendor \"transform\" support.\n */\n\ntransform()\n  vendor('transform', arguments)\n\n/*\n * Vendor \"transform-origin\" support.\n */\ntransform-origin()\n    vendor('transform-origin', arguments)\n\n/*\n * Vendor \"transform-style\" support.\n */\n\ntransform-style()\n  vendor('transform-style', arguments)\n\n/*\n * Vendor \"border-image\" support.\n */\n\nborder-image()\n  vendor('border-image', arguments, only: webkit moz o official)\n\n/*\n * Vendor \"transition\" support.\n */\n\ntransition()\n  vendor('transition', arguments)\n\n/*\n * Vendor \"transition-property\" support.\n */\n\ntransition-property()\n  vendor('transition-property', arguments)\n\n/*\n * Vendor \"transition-duration\" support.\n */\n\ntransition-duration()\n  vendor('transition-duration', arguments)\n\n/*\n * Vendor \"transition-timing-function\" support.\n */\n\ntransition-timing-function()\n  vendor('transition-timing-function', arguments)\n\n/*\n * Vendor \"transition-delay\" support.\n */\n\ntransition-delay()\n  vendor('transition-delay', arguments)\n\n/*\n * Vendor \"backface-visibility\" support.\n */\n\nbackface-visibility()\n  vendor('backface-visibility', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"perspective\" support.\n */\n\nperspective()\n  if mixin\n    vendor('perspective', arguments, only: webkit moz ms official)\n  else\n    'perspective(%s)' % arguments\n\n/*\n * Vendor \"perspective-origin\" support.\n */\n\nperspective-origin()\n  vendor('perspective-origin', arguments, only: webkit moz ms official)\n\n/*\n * Opacity with conditional IE support.\n */\n\nopacity(n, args...)\n  opacity: n args\n  if support-for-ie\n    if n == inherit or n == initial\n      -ms-filter: n args\n      filter: n args\n    else\n      val = round(n * 100)\n      if val == 100\n        -ms-filter: none args\n        filter: none args\n      else\n        -ms-filter: '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\"' % val args\n        filter: 'alpha(opacity=%s)' % val args\n\n/*\n * Vendor \"text-size-adjust\"\n */\n\ntext-size-adjust()\n  vendor('text-size-adjust', arguments)\n\n/*\n * Alias the \"white-space\" property.\n */\n\nwhitespace()\n  white-space: arguments\n\n/*\n * Vendor \"box-sizing\" support.\n */\n\nbox-sizing()\n  vendor('box-sizing', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-orient\" support.\n */\n\nbox-orient()\n  vendor('box-orient', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-flex-group\" support.\n */\n\nbox-flex-group()\n  vendor('box-flex-group', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-ordinal-group\" support.\n */\n\nbox-ordinal-group()\n  vendor('box-ordinal-group', arguments, only: webkit moz ms official)\n\n\n/*\n * Vendor \"box-align\" support.\n */\n\nbox-align()\n  vendor('box-align', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"box-pack\" support.\n */\n\nbox-pack()\n  vendor('box-pack', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"box-direction\" support.\n */\n\nbox-direction()\n  vendor('box-direction', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"animation\" support.\n */\n\nanimation()\n  vendor('animation', arguments)\n\n\n/*\n * Vendor \"animation-name\" support.\n */\n\nanimation-name()\n  vendor('animation-name', arguments)\n\n/*\n * Vendor \"animation-duration\" support.\n */\n\nanimation-duration()\n  vendor('animation-duration', arguments)\n\n/*\n * Vendor \"animation-delay\" support.\n */\n\nanimation-delay()\n  vendor('animation-delay', arguments)\n\n/*\n * Vendor \"animation-direction\" support.\n */\n\nanimation-direction()\n  vendor('animation-direction', arguments)\n\n/*\n * Vendor \"animation-iteration-count\" support.\n */\n\nanimation-iteration-count()\n  vendor('animation-iteration-count', arguments)\n\n/*\n * Vendor \"animation-timing-function\" support.\n */\n\nanimation-timing-function()\n  vendor('animation-timing-function', arguments)\n\n/*\n * Vendor \"animation-play-state\" support.\n */\n\nanimation-play-state()\n  vendor('animation-play-state', arguments)\n\n/*\n * Vendor \"animation-fill-mode\" support.\n */\n\nanimation-fill-mode()\n  vendor('animation-fill-mode', arguments)\n\n/*\n * Vendor \"hyphens\" support.\n */\n\nhyphens()\n  vendor('hyphens', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"appearance\" support.\n */\n\nappearance()\n  vendor('appearance', arguments, only: webkit moz official)\n\n/*\n * Vendor \"tab-size\" support.\n */\n\ntab-size()\n  vendor('tab-size', arguments, only: moz o official)\n\n/*\n * Vendor \"overflow-scrolling\" support.\n */\n\noverflow-scrolling()\n  vendor('overflow-scrolling', arguments, only: webkit official)\n\n/*\n * Vendor \"text-overflow\" support, , -o- for opera 9.* - 10.*\n */\n\ntext-overflow()\n  vendor('text-overflow', arguments, only: official o)\n\n/*\n * Vendor \"text-size-adjust\" support.\n */\ntext-size-adjust()\n  vendor('text-size-adjust', arguments, only: official webkit ms)\n\n/*\n * Vendor \"font-smoothing\" support, webkit only.\n */\nfont-smoothing()\n  vendor('font-smoothing', arguments, only: webkit)\n\n/*\n * Helper for border-radius().\n */\n\n-apply-border-radius(pos, importance)\n  if length(pos) == 3\n    // border-radius: <top | buttom> <left | right> <n>\n    y = pos[0]\n    x = pos[1]\n    // We don't use moz for simple boder-radius anymore\n    // vendor('border-radius-%s%s' % pos, pos[2], only: moz)\n    vendor('border-%s-%s-radius' % pos, pos[2] importance, only: webkit official)\n  else if pos[0] in (top bottom)\n    // border-radius: <top | bottom> <n>\n    -apply-border-radius(pos[0] left pos[1], importance)\n    -apply-border-radius(pos[0] right pos[1], importance)\n  else if pos[0] in (left right)\n    // border-radius: <left | right> <n>\n    unshift(pos, top);\n    -apply-border-radius(pos, importance)\n    pos[0] = bottom\n    -apply-border-radius(pos, importance)\n\n/*\n * border-radius supporting vendor prefixes and\n * augmented behavior.\n *\n * Examples:\n *\n *    border-radius: 2px 5px\n *    border-radius: top 5px bottom 10px\n *    border-radius: left 5px\n *    border-radius: top left 5px\n *    border-radius: top left 10px bottom right 5px\n *    border-radius: top left 10px, bottom right 5px\n *\n */\n\nborder-radius()\n  pos = ()\n  augmented = false\n  importance = arguments[length(arguments) - 1] == !important ? !important : unquote('')\n\n  for args in arguments\n    for arg in args\n      if arg is a 'ident'\n        append(pos, arg)\n        augmented = true\n      else\n        append(pos, arg)\n        if augmented\n          -apply-border-radius(pos, importance)\n          pos = ()\n  vendor('border-radius', pos, only: webkit official) unless augmented\n\n/**\n * Vendor input-placeholder/placeholder support.\n *\n * Examples:\n *    // Default syntax\n *    body\n *      placeholder(color #333, font-weight normal)\n *\n *    // The comma is important\n *    .placeholder-red\n *      placeholder(color red,)\n *\n *    // We can pass a function\n *    green-placeholder()\n *      color green\n *    .placeholder-green\n *      placeholder(green-placeholder)\n *\n *    // We can pass a hash\n *    textarea\n *      placeholder((font-style italic) (font-weight bold) (padding '4px 10px'))\n */\nplaceholder()\n  for v in ':-webkit-input' '-moz' ':-moz' '-ms-input'\n    &:{v}-placeholder\n      for pair in arguments\n        if typeof(pair) == 'function'\n          pair()\n        else if pair is not null && pair[0] is not null\n          {pair[0]}: type(pair[1]) == 'string' ? s(pair[1]) : pair[1]\ninput-placeholder = placeholder\n\n/*\n * Vendor background support (gradients).\n */\n\nbackground()\n  if match('-gradient\\(', ''+arguments)\n    vendor('background', arguments, vendor-property: false)\n  else\n    background arguments\n\nbackground-image()\n  if match('-gradient\\(', ''+arguments)\n    vendor('background-image', arguments, vendor-property: false)\n  else\n    background-image arguments\n\ncursor()\n  if match('-gradient\\(', ''+arguments)\n    vendor('cursor', arguments, vendor-property: false)\n  else\n    cursor arguments\n\nlist-style()\n  if match('-gradient\\(', ''+arguments)\n    vendor('list-style', arguments, vendor-property: false)\n  else\n    list-style arguments\n\nlist-style-image()\n  if match('-gradient\\(', ''+arguments)\n    vendor('list-style-image', arguments, vendor-property: false)\n  else\n    list-style-image arguments\n","/*\n * border: <color>\n * border: ...\n */\n\nborder(color, args...)\n  if color is a 'color'\n    border: 1px solid color args\n  else\n    border: arguments\n","/*\n * Overflow utility. Maps to regular overflow, and adds an ellipsis value.\n *\n * Synopsis:\n *\n *   overflow: <type>\n *\n * Examples:\n *\n *     overflow: auto\n *     overflow: hidden\n *     overflow: ellipsis\n *\n */\n\noverflow()\n  if arguments[0] == ellipsis\n    ellipsis()\n  else\n    overflow: arguments\n","// ----------\n// Typography\n// ----------\n\n// Function: Line Height\n// \n// If there is a font-size set on the parent element, adjusts the line height to \n// match that. If not, it uses the base font-size to calculate the line-height.\n\n-line-height()\n  if @font-size\n    line-height: 1.6em\n  else\n    line-height: unit(font-size*1.6, 'px')\n    line-height: 1.6rem\n\n// Mixin: Text Margin\n// \n// Puts nice visually pleasing top and bottom margins on a paragraph of text.\n// Put a font-size on your element to have it adjust accordingly.\n// \n// ex. p\n//       font-size: 18px\n//       text-margin()\n\ntext-margin(size=font-size)\n  if @font-size\n    margin: .75em 0\n  else\n    margin: unit(font-size*.75, 'px') 0\n\n// Mixin: Paragraph\n// \n// Sets a nice size, line-height, and margins on a paragraph of text. Pass a\n// size in to customize. Toggle margins off if you don't want them.\n// \n// ex. p()\n// ex. p: 18px\n// ex. p: 14px false\n\np(size=1rem, margins = true)\n  font-size: size\n  text-margin() if margins\n  -line-height()\n  openTypeLigatures() if ligatures\n\n// Alias: paragraph\nparagraph = p\n\n// Alias: Font Size\n// An alias for 'font-size' with auto-fallback for rem.\n// ex. fs: 16px\n// ex. fs: 1.2rem\n\nfs(size)\n  if (unit(size) == 'rem')\n    font-size: round(unit((font-size*size), 'px'))\n    font-size: size\n  else\n    font-size: size\n\n// Alias: Uppercase\n// An alias for 'text-transform: uppercase'\n// ex. uppercase()\n\nuppercase()\n  text-transform: uppercase\n\n// Alias: Upcase\nupcase = uppercase\n\n// Alias: Lowercase\n// An alias for 'text-transform: lowercase'\n// ex. lowercase()\n\nlowercase()\n  text-transform: lowercase\n\n// Alias: Downcase\ndowncase = lowercase\n\n// Alias: Reset Case\n// Gets rid of an text transform\n// ex. reset-case()\n\nreset-case()\n  text-transform: none\n\n// Mixin: Small\n// \n// Makes your text smaller and a little lighter. Great on <small /> tags.\n// \n// ex. small()\n\nsmall()\n  font-size: 55%\n  opacity: .6\n  font-weight: normal\n\n// Function: Heading\n// For internal use within headings\n\n-heading(multiplier)\n  font-size: unit((font-size*multiplier), 'px')\n  font-size: unit(multiplier, 'rem')\n  text-rendering: optimizelegibility\n  font-weight: bold\n  text-margin()\n  -line-height()\n  openTypeLigatures() if ligatures\n\n// Mixin Set: h1, h2, h3, h4, h5, h6\n// \n// These provide nice defaults for headings based off the default font size.\n// The can scale infinitely, and work best when matched to their corresponding\n// html elements. If you'd like to change the base size of a header, just pass\n// it as an option.\n// \n// ex. h3()\n// ex. h3: 3.5\n\nh1(size=2.4)\n  -heading(size)\n\nh2(size=1.8)\n  -heading(size)\n\nh3(size=1.5)\n  -heading(size)\n\nh4(size=1.3)\n  -heading(size)\n\nh5(size=1.0)\n  -heading(size)\n\nh6(size=0.9)\n  -heading(size)\n  upcase()\n\n// Mixin: Link\n// \n// A nice default style for links. Accepts a color and a style. Color can be\n// anything, style can be underline, darken, lighten, or glow, each giving it a\n// different style of interaction when hovered. More suggestions here welcome.\n// \n// ex. link()\n// ex. link: green\n// ex. link: #57777E 'glow'\n\nlink(color=blue, style='underline')\n  color: color\n  text-decoration: none\n  transition()\n\n  if style == 'underline'\n    hover-underline()\n    &:hover\n      color: darken(@color, 15%)\n  else if style == 'darken'\n    &:hover\n      color: darken(@color, 20%)\n  else if style == 'lighten'\n    hover-lighten()\n  else if style == 'glow'\n    &:hover\n      text-shadow: 0 0 7px rgba(color, .6)\n      \n  &:visited\n    opacity: .8\n\n// Mixin: Reset Link\n// \n// Sometimes my link mixin of the browser defaults will give you questionable\n// link defaults that you don't want on certain elements. This guy gets rid of\n// that.\n\n// ex. reset-link()\n\nreset-link()\n  border: none\n  text-decoration: none\n  color: initial\n  \n  &:hover\n    border: none\n    text-decoration: none\n    color: initial\n    \n  &:visited\n    opacity: 1\n\n// Mixin: Text Selection\n// \n// This guy sets the text select color intelligently based on the\n// highlight-color variable found in the settings file. If you really want, you\n// can pass it a color override too.\n\n// ex. text-selection()\n\ntext-selection(color=highlight-color, textColor=null)\n  textColor = (light(color) ? white : #494949) unless textColor\n\n  &::-moz-selection\n    background: color\n    color: textColor\n    \n  &::selection\n    background: color\n    color: textColor\n\n// Mixin: Ul\n// \n// A nice default for list styles. More or less the same as browser defaults,\n// scales nicely. You can pass it any style that list-style-type would normally\n// take. Defaults to disc. Use this on a ul element por favor.\n// \n// ex. ul()\n// ex. ul: 'square'\n\nul(style='disc')\n  margin: 5px 15px\n  margin: 0.32rem 0.94rem\n  padding-left: 1rem\n\n  li\n    list-style-type: unquote(style)\n    padding: 2px 0\n    padding: 0.125rem\n\n// Mixin: Ol\n// \n// A nice default for list styles. More or less the same as browser defaults,\n// scales nicely. You can pass it any style that list-style-type would normally\n// take. Defaults to decimal. Use this on a ol element por favor.\n// \n// ex. ol()\n// ex. ol: 'upper-roman'\n\nol(style='decimal')\n  margin: 5px 18px\n  margin: 0.32rem 1.125rem\n  padding-left: 1rem\n\n  li\n    list-style-type: unquote(style)\n    padding: 2px 0\n    padding: 0.125rem\n\n// Mixin: Inline List\n// \n// For when you need your list to be horizontal. Pass it the spacing you want\n// between list elements, whatever units you'd like. Defaults to 20px.\n// \n// ex. inline-list()\n// ex. inline-list: 15px\n\ninline-list(spacing=20px)\n  group()\n  margin: 0\n  padding: 0\n\n  li\n    float: left\n    margin-right: spacing\n    list-style-type: none\n\n  li:last-child\n    margin-right: 0\n\n// Mixin: Reset List\n// \n// If you're tired of all the list shenanigans and want to get rid of them for\n// this special list you're working on, this is your guy. Resets the margins,\n// padding, and style.\n// \n// ex. reset-list()\n\nreset-list()\n  margin: 0\n  padding: 0\n\n  li\n    float: none\n    list-style-type: none\n    padding: 0\n    margin: 0\n\n// Mixin: Blockquote\n// \n// Nice styles for a blockquote, and even puts a nice hyphen in before your\n// citation. Use with a <p> and <cite>, <footer>, or <figcaption> inside for\n// best results. Pass a color or 'none' to set the left border.\n// \n// ex. blockquote()\n\nblockquote(color=blue)\n  border-left: 4px solid color\n  margin: 1em 0\n  padding-left: 1.5em\n  group()\n\n  > p\n    font-weight: 300\n    font-size: 127%\n    font-size: 1.27rem\n    line-height: 127%\n    line-height: 1.27rem\n    margin-top: 0\n\n  > cite, > footer, > figcaption\n    color: #888888\n    &:before\n      content: '\\2014'\n\n// Alias: blockquo\nblockquo = blockquote\n\n// Hyphenation\n// \n// Hyphenation is the better word-break. It’s locale aware, and inserts the\n// hyphen character at the correct place, when breaking the words. This is\n// especially important in responsive designs. It will save you from a lot of\n// ragged lines. And, no need anymore for clunky & slow Javascript hyphenation\n// fallbacks. Taken from http://www.newnet-soft.com/blog/csstypography\n// \n// ex. hyphenation()\n\nhyphenation()\n    -ms-word-break: break-all\n    word-break:     break-all\n    word-break:     break-word // webkit\n    hyphens: auto // none, auto, <number>\n    -webkit-hyphenate-before: 2\n    -webkit-hyphenate-after:  3\n    hyphenate-lines:          3\n\n// Additive Mixin: Base\n// \n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n// \n// This is an essential mixin. You want this on your page. Sets your font stack,\n// size, and colors based on the settings file and makes sure that your text is\n// a great looking as possible. You can override any of the params, but there is\n// really no reason to.\n// \n// ex. base()\n\nbase(fonts=font-stack, size=font-size, color=font-color)\n  html\n    font-size: unit(size, 'px')\n    font-size: unit((size/16)*100, \"%\")\n\n  body\n    font-family: fonts\n    color: color\n    -webkit-font-smoothing: antialiased\n    -webkit-text-size-adjust: 100%\n    -ms-text-size-adjust: 100%\n    font-size-adjust: auto\n\n// Additive Mixin: Headers\n// \n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n// \n// Adds roots' wonderful scaling header styles to your <hx> tags.\n// \n// ex. headers()\n\nheaders()\n  h1\n    h1()\n\n  h2\n    h2()\n\n  h3\n    h3()\n\n  h4\n    h4()\n\n  h5\n    h5()\n\n  h6\n    h6()\n\n// Additive Mixin: Lists\n// \n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n// \n// Adds roots' styles to ul and ols.\n// \n// ex. lists()\n\nlists()\n  ul\n    ul()\n  ol\n    ol()\n\n// Additive Mixin: Bold-Italic\n// \n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n// \n// Adds bold and italic styles to the right tags if you did a global reset.\n// \n// ex. bold-italic()\n\nbold-italic()\n  b\n    bold()\n  i\n    italic()\n  strong\n    bold()\n  em\n    italic()\n\n// Additive Mixin: Typography\n// \n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n// \n// Adds roots' styles to bold and italic elements, headers, paragrapgs, small\n// text, links, lists, and blockquotes. Got all your basic elements covered.\n// \n// ex. typography()\n\ntypography()\n  bold-italic()\n  headers()\n  lists()\n  text-selection()\n\n  p\n    paragraph()\n\n  small\n    small()\n\n  a\n    link()\n\n  blockquote\n    blockquo()\n  \n  .hyphenation\n    hyphenation()\n","// ---------\n// Utilities\n// ---------\n\n// Mixin: Pie\n// When turned on, enables css3 pie (http://css3pie.com/) for all\n// elements that can use it. Which makes IE look a lot nicer.\n\npie()\n  behavior: url(pie-path) if pie-enabled\n\n// Mixin: Rounded\n//\n// Unless you are working with a ridiculously large element, this will round the\n// corners as much as css will allow. Even in IE.\n//\n// ex. rounded()\n\nrounded()\n  border-radius: 999px\n  pie()\n\n// Alias: No Select\n// You can't highlight this.\n\nno-select()\n  -webkit-touch-callout: none\n  user-select: none\n\n// Alias: B\n// Border, but quicker and with an intelligent default.\n\nb()\n  arguments = unquote('1px solid') unless arguments\n  border: arguments\n\n// Mixin: Bg\n//\n// Makes background (with image) declarations a little simpler. Use this with\n// the global img-path variable to set a base image path that you don't have to\n// keep repeating. Also sets 'no-repeat' as the default background-repeat.\n//\n// ex. bg: 'test.png'\n// ex. bg: 'other.jpg' center center repeat\n\nbg(path, args...)\n  args = unquote('no-repeat') unless args\n  background: url(img-path path) args\n\n// Mixin: bg-retina\n//\n// Make sure the image path is double the size, pass it halved numbers, and\n// you're in the retina-clear.\n//\n// ex. bg-retina: 'test.png' 200px 100px\n// ex. bg-retina: 'other.jpg' 100px 50px center center repeat\n\nbg-retina(path, width, height, args...)\n  args = unquote('no-repeat') unless args\n  set_size = false\n\n  for arg in args\n    if arg == 'no-repeat'\n      set_size = true\n\n  background: url(img-path path) args\n  background-size: width height\n\n  if set_size\n    size: width height\n\n// Alias: Bold\n// It's just faster to type bold() than font-weight: bold\n\nbold()\n  font-weight: bold\n\n// Alias: Italic\n// It's just faster to type italic() than font-style: italic\n\nitalic()\n  font-style: italic\n\n// Alias: Normal\n// Put the font-weight and style back to normal\n\nnormal()\n  font-weight: normal\n  font-style: normal\n\n// Mixin: Image Replace\n//\n// Image replacement. Pass it an image path and the image's dimensions and any\n// text will be hidden in the div and it will show an image instead. Uses the\n// fanciest new method, props to Paul Irish. Only works when called as a\n// function with parens. Do not try to do it with a colon!\n//\n// ex. ir('test.jpg', 200 400)\n\nimage-replace(path, dimensions...)\n  dimensions = dimensions[0]\n  font: 0/0 a\n  text-shadow: none\n  color: transparent\n  bg: path if path\n  if length(dimensions) > 1\n    width: unit(dimensions[0], 'px')\n    height: unit(dimensions[1], 'px')\n  else\n    warn(\"Make sure you also pass the image dimensions. Example: ir('/img/whatever.jpg', 200px 400px)\")\n\n// Alias: ir\nir = image-replace\n\n// Mixin: Columns\n//\n// For css3 columns. Takes column count (int), column gap (px, em), column width\n// (px, em), and a border-like declaration if you want a column rule. This\n// follows exactly with the css3 spec, it's just quicker.\n//\n// ex. columns()\n// ex. columns: 5\n// ex. columns(8, 15px, 200px, '1px solid red')\n\ncolumns(count=3, gap=30px, width=null, rule=null)\n  column-count: count\n  column-gap: gap\n  column-width: width if width\n  column-rule: unquote(rule) if rule\n\n// Mixin: Avoid Column Break\n//\n// If you have a list that is broken into columns, this will make sure that the\n// list item is not split across columns awkwardly. Works only in webkit at the\n// moment.\n//\n// ex. avoid-column-break()\n\navoid-column-break()\n  column-break-inside: avoid\n\n// Mixin: Triangle\n//\n// One of my favorites. Makes a little css triangle for you. Pass it a direction\n// (up, down, left, right), size (in pixels), and a color.\n//\n// ex. triangle()\n// ex. triangle: 'down' 15px blue\n\ntriangle(direction='up', size=10px, color=#000)\n  width: 0\n  height: 0\n  if direction == 'up'\n    border-left: size solid transparent\n    border-right: size solid transparent\n    border-bottom: size solid color\n  else if direction == 'down'\n    border-left: size solid transparent\n    border-right: size solid transparent\n    border-top: size solid color\n  else if direction == 'left'\n    border-top: size solid transparent\n    border-bottom: size solid transparent\n    border-right: size solid color\n  else if direction == 'right'\n    border-top: size solid transparent\n    border-bottom: size solid transparent\n    border-left: size solid color\n\n// Mixin: Sprite\n//\n// Given a direction in which your sprites are aligned (horizontal/vertical) and\n// an iteration, will measure the width/height of your first sprite frame and\n// step through to the nth next one, depending on the given iteration number.\n// Width/height must be defined for this to work (as is the case for any sprite)\n//\n// ex. sprite: 2\n// ex. sprite: 5 'horizontal'\n//\n// TODO: Try using image-size here if @width or @height aren't defined\n\nsprite(iteration, orientation='vertical')\n  if orientation == 'vertical'\n    background-position: 0 unit(@height*-1*iteration, 'px')\n  else if orientation == 'horizontal'\n    // warn(unit(@width*iteration, 'px'))\n    background-position: unit(@width*iteration, 'px') 0\n\n// Alias: group\n// Clearfix with a better name. Excellent for wrangling floats.\n\ngroup = clearfix\n\n// Alias: Inline Block\n// Cross browser inline block display. Saves many IE headaches.\n\ninline-block()\n  display: inline-block\n\n  if support-for-ie\n    display: -moz-inline-stack\n    vertical-align: baseline\n    zoom: 1\n    *display: inline\n    *vertical-align: auto\n\n// Mixin: Border Box HTML\n// Add border box to every element in your project. Used in your project root.\n// http://www.paulirish.com/2012/box-sizing-border-box-ftw/\n\nborder-box-html()\n  html\n    box-sizing: border-box\n\n  *,\n  *:before,\n  *:after\n    box-sizing: inherit\n\n// Mixin: Vertically Align\n// Cross browser vertical align. Works down to IE9.\n//\n// ex. vertically-align() or reset it with vertically-align(false)\n\nvertically-align(reset = null)\n  if reset != false\n    position: relative\n    top: 50%\n    transform: translateY(-50%)\n  else\n    position: relative\n    top: 0\n    transform: translateY(0)\n\n// Mixin: Media\n//\n// Based on Nicole Sullivan's media class, made famous by Facebook\n// http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-\n// hundreds-of-lines-of-code\n//\n// Put this on a parent and it will split the first two children left and right,\n// like you would with perhaps a comment with an avatar to the left. Pass it a\n// margin between the two. Explained fully here:\n// http://carrotblog.com/css-patterns-evolved/\n//\n// This mixin works right when the element you apply it to has two or three\n// direct children. The first one will float to the left, the second one will be\n// to the right of the first, and third will go farthest right.\n//\n// ex. media()\n// ex. media: 15px\n// ex. media: 15px 10px\n\nmedia(margin=10px)\n\n  left-margin = margin\n  right-margin = margin\n\n  if length(arguments) > 1\n    left-margin = arguments[0]\n    right-margin = arguments[1]\n\n  overflow: hidden\n  zoom: 1\n\n  & > *\n    inline-block()\n    overflow: hidden\n  & > *:first-child\n    float: left\n    margin-right: right-margin\n  & > *:nth-child(3)\n    float: right\n    margin-left: left-margin\n\n// Mixin: Ratio Box\n// Set a specific width/height ratio. Useful on background images and iframes.\n\nratio-box(ratio = 1/1)\n  ratio = remove-unit(ratio)\n  overflow: hidden\n  position: relative\n\n  &:before\n    content: ''\n    display: block\n    height: 0\n    padding-top: (1 / ratio) * 100%\n\n// Mixin: Raquo\n//\n// Because technically raquo is not semantic, it's better to add it like this.\n//\n// ex. raquo()\n\nraquo()\n  &:after\n    content: \" \\00BB\"\n\n// Mixin: Font Face\n//\n// Super simple font-face declaration. Just give the name and the folder it\n// lives in. Make sure the font name matches the name of the files. Uses the\n// fontspring syntax:\n// http://www.fontspring.com/blog/the-new-bulletproof-font-face-syntax\n//\n// ex. font-face(proxima-nova, '/fonts')\n\nfont-face(name, folder, weight='normal', style='normal')\n  @font-face\n    font-family: name\n    src: url(folder unquote('/') name unquote('.eot') '?#iefix') format('embedded-opentype'), url(folder unquote('/') name unquote('.woff')) format('woff'), url(folder unquote('/') name unquote('.ttf')) format('truetype'), url(folder unquote('/') name unquote('.eot') unquote('#') name) format('svg');\n    font-weight: unquote(weight)\n    font-style: unquote(style)\n\n// Mixin: Debug\n//\n// Debugging tool - adds a border to the current element, its children,\n// grandchildren, etc so you can see what's up – great for precise layout\n// tweaks.  It will also add flags if you made mistakes like put in inline\n// styles, forgot an alt on an image, left the alt blank, etc. Not to be used\n// in production, obviously.\n//\n// via dbox: http://codepen.io/dbox/pen/GJZzYo?editors=110\n\ndebug()\n  border 1px solid MediumPurple\n  > *\n    border 1px solid DarkKhaki\n  > * > *\n    border 1px solid MediumTurquoise\n  > * > * > *\n    border 1px solid LightSlateGray\n  > * > * > * > *\n    border 1px solid LightBlue\n  > * > * > * > * > *\n    border 1px solid MediumSlateBlue\n  > * > * > * > * > * > *\n    border 1px solid DeepSkyBlue\n  > * > * > * > * > * > * > *\n    border 1px solid DarkSeaGreen\n\n  img\n    border: 1px solid #f00\n    -webkit-filter: hue-rotate(330deg) contrast(.75) saturate(6)\n    filter: hue-rotate(330deg) contrast(.75) saturate(6)\n\n  img[alt]\n    border: 1px solid LimeGreen\n    -webkit-filter: none\n    filter: none\n\n  img[alt=\"\"]\n    border: 1px solid gold\n    -webkit-filter: contrast(1) saturate(2)\n    filter: contrast(1) saturate(2)\n\n  a\n    background: rgba(#f00, .1)\n    border: 1px solid #f00\n\n  a[title]\n    background: none\n    border-color: LimeGreen\n\n  style\n    border: block\n\n  [style], style, [class=\"\"], [id=\"\"], a[href=\"#\"]\n    background: rgba(yellow, .2)\n    border: 1px solid gold\n\n// Custom animation timing functions, ported from bourbon\n// https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_timing-functions.scss\n\n// ease-in\nease-in-quad =      cubic-bezier(0.550,  0.085, 0.680, 0.530)\nease-in-cubic =     cubic-bezier(0.550,  0.055, 0.675, 0.190)\nease-in-quart =     cubic-bezier(0.895,  0.030, 0.685, 0.220)\nease-in-quint =     cubic-bezier(0.755,  0.050, 0.855, 0.060)\nease-in-sine =      cubic-bezier(0.470,  0.000, 0.745, 0.715)\nease-in-expo =      cubic-bezier(0.950,  0.050, 0.795, 0.035)\nease-in-circ =      cubic-bezier(0.600,  0.040, 0.980, 0.335)\nease-in-back =      cubic-bezier(0.600, -0.280, 0.735, 0.045)\nease-in-swift =     cubic-bezier(0.900,  0.000, 0.450, 1.000)\n\n// ease-out\nease-out-quad =     cubic-bezier(0.250,  0.460, 0.450, 0.940)\nease-out-cubic =    cubic-bezier(0.215,  0.610, 0.355, 1.000)\nease-out-quart =    cubic-bezier(0.165,  0.840, 0.440, 1.000)\nease-out-quint =    cubic-bezier(0.230,  1.000, 0.320, 1.000)\nease-out-sine =     cubic-bezier(0.390,  0.575, 0.565, 1.000)\nease-out-expo =     cubic-bezier(0.190,  1.000, 0.220, 1.000)\nease-out-circ =     cubic-bezier(0.075,  0.820, 0.165, 1.000)\nease-out-back =     cubic-bezier(0.175,  0.885, 0.320, 1.275)\nease-out-swift =    cubic-bezier(0.550,  0.000, 0.100, 1.000)\n\n// ease-in-out\nease-in-out-quad =  cubic-bezier(0.455,  0.030, 0.515, 0.955)\nease-in-out-cubic = cubic-bezier(0.645,  0.045, 0.355, 1.000)\nease-in-out-quart = cubic-bezier(0.770,  0.000, 0.175, 1.000)\nease-in-out-quint = cubic-bezier(0.860,  0.000, 0.070, 1.000)\nease-in-out-sine =  cubic-bezier(0.445,  0.050, 0.550, 0.950)\nease-in-out-expo =  cubic-bezier(1.000,  0.000, 0.000, 1.000)\nease-in-out-circ =  cubic-bezier(0.785,  0.135, 0.150, 0.860)\nease-in-out-back =  cubic-bezier(0.680, -0.550, 0.265, 1.550)\nease-in-out-swift = cubic-bezier(0.900,  0.000, 0.100, 1.000)\n\n// Function: cached-image-url\n//\n// An alternative to url() that stores images in a cache for use in\n// cache-images().\n\nbackground-images = null\n\ncached-image-url()\n  base = ''\n  s = unquote('url(\"' + base + join('', arguments) + '\")')\n  push(background-images, s) unless s in background-images\n  url(arguments)\n\n// Mixin: Cache Images\n// Use this at the end of all your styles outputs the image cache script.\n\ncache-images()\n  body:after\n    display: none\n    content: background-images\n\n// Mixin: Rem Calculator\n//\n// Calculates and returns the rem value based on px input. Default base font\n// size is 16px, but can be changed with base-font-size.\n//\n// ex       : rem(30px) or rem(30)\n// returns  : 1.875rem\n\nrem(value)\n  base-font-size ?= 16px\n  type = unit(value)\n  if type == px\n    return unit(value / base-font-size, 'rem')\n  else\n    return unit(value, type)\n\n// Block Mixin: Quantity Queries\n//\n// Set rules for a selector based on a specific sibling count.\n// via: https://github.com/pascalduez/postcss-quantity-queries\n//\n// ex. +quantity-at-least(6)\n// ex. +quantity-at-most(12, div)\n// ex. +quantity-between(0, 8, span)\n// ex. +quantity-exactly(5)\n\nquantity-at-least(count=4, selector=li)\n  & > {selector}:nth-last-child(n+{count})\n  & > {selector}:nth-last-child(n+{count}) ~ {selector}\n    {block}\n\nquantity-at-most(count=4, selector=li)\n  & > {selector}:nth-last-child(-n+{count}):first-child\n  & > {selector}:nth-last-child(-n+{count}):first-child ~ {selector}\n    {block}\n\nquantity-between(start=0, end=10, selector=li)\n  & > {selector}:nth-last-child(n+{start}):nth-last-child(-n+{end}):first-child\n  & > {selector}:nth-last-child(n+{start}):nth-last-child(-n+{end}):first-child ~ {selector}\n    {block}\n\nquantity-exactly(count=4, selector=li)\n  & > {selector}:nth-last-child({count}):first-child\n  & > {selector}:nth-last-child({count}):first-child ~ {selector}\n    {block}\n","// ------\n// Vendor\n// ------\n\n// Utilities specifically intended for helping with vendor-prefixed\n// css properties\n\n// Alias: Transition\n//\n// Transition with an intelligent default.\n//\n// ex. transition()\n// ex. transition: color 1s ease\n// ex. transition(color 1s ease, background 2.4s linear)\n\n//Cache nib transition mixin.\n_transition = transition\n\ntransition()\n  arguments = unquote('all .3s ease') unless arguments\n  _transition: arguments\n\n\n// Alias: Box Shadow\n//\n// Box shadow with pie support, if you are using it.\n//\n// ex. box-shadow: 1px 1px 3px blue\n// ex. box-shadow(1px 1px 3px blue, inset 2px 0 5px rgba(0,0,0,.5))\n\nbox-shadow()\n  box-shadow: arguments\n  pie()\n\n// Alias: Border Radius\n//\n// Border-radius with pie support, if you are using it.\n//\n// ex. +round-corners(5px)\n\nborder-radius()\n  border-radius: arguments\n  pie()\n\n// Alias: Opacity\n//\n// I know, it seems silly. But every time you go to old IE testing you will be\n// thanking yourself for using this instead of the normal opacity declaration.\n// Overrides default opacity.\n//\n// ex. opacity: .6\n\nopacity(opacity, args...)\n  \n  if args  \n    filter: s(\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\", opacity * 100 args) if support-for-ie  \n  else\n    filter: s(\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\", opacity * 100) if support-for-ie  \n    \n  opacity: opacity args\n\n// Alias: Border Box\n// A quicker way to specify border-box sizing.\n\nborder-box()\n  box-sizing: border-box\n\n// Alises: background-appearance-x and y\n//\n// In case you want to use an unsupported background-position property, this\n// should set you straight!\n\nbackground-position-x(x)\n  background-position: x 0\n\nbackground-position-y(y)\n  background-position: 0 y\n\n// Mixin: Opentype ligatures\n//\n// The vast majority of fonts contain lowercase and uppercase alphabets,\n// numerals, punctuation and accents. // Many professionally-designed fonts\n// also contain ligatures, alternative characters, smallcaps, different kinds of\n// numbers, and sometimes much more besides. This enables it.\n//\n// Source: http://www.newnet-soft.com/blog/csstypography\n// Additional: http://blog.fontdeck.com/post/15777165734/opentype-1\n\nopenTypeLigatures()\n  -moz-font-feature-settings:    \"liga=1, dlig=1\"\n  -ms-font-feature-settings:     \"liga\", \"dlig\"\n  -webkit-font-feature-settings: \"liga\", \"dlig\"\n  -o-font-feature-settings:      \"liga\", \"dlig\"\n  font-feature-settings:         \"liga\", \"dlig\"\n","// -----------\n// Interaction\n// -----------\n\n// These mixins trigger on some sort of interaction with an element, like a\n// hover or a click.\n\n// Mixin: Hover Darken\n// \n// Darkens the color and/or background color on your element when it's hovered.\n// Takes an optional percentage to darken it.\n// \n// ex. hover-darken()\n// ex. hover-darken: 30%\n\nhover-darken(percent = 15%, forceUseColor = false)\n  &:hover\n    if @background and !forceUseColor\n      background-color: darken(@background, percent)\n    else if @background-color and !forceUseColor\n      background-color: darken(@background-color, percent)\n    else if @color\n      color: darken(@color, percent)\n    else\n      warn('you need to set a color or background color on your element for this to work')\n\n// Mixin: Hover Lighten\n// \n// Works the same way as hover-darken but lightens the color.\n// \n// ex. hover-lighten()\n// ex. hover-lighten: 30%\n\nhover-lighten(percent = 15%, forceUseColor = false)\n  &:hover\n    if @background and !forceUseColor\n      background-color: lighten(@background, percent)\n    else if @background-color and !forceUseColor\n      background-color: lighten(@background-color, percent)\n    else if @color\n      color: lighten(@color, percent)\n    else\n      warn('you need to set a color or background color on your element for this to work')\n\n// Mixin: Hover Underline\n// \n// This one is interesting, and may need tweaking to get it to work right on the\n// intended element. Works very nicely for text like in a span, and can animate.\n// \n// ex. hover-underline()\n// ex. hover-underline: 2px 'dotted'\n\nhover-underline(borderSize = 1px, type = 'solid', color = null)\n  border-bottom: borderSize unquote(type) transparent\n  \n  &:hover\n    border-bottom: borderSize unquote(type) color\n\n// Mixin: Hover Pop\n// \n// On hover, your element pops out from the page. For scale, it takes an integer\n// or float, 1 represents 100%, 2 is 200%, etc. Optionally can also rotate,\n// pass it a number followed by \"deg\", like 180deg. If you pass true for\n// shadow, it will animate in a drop shadow to add to the effect.\n// \n// ex. hover-pop: 1.5\n// ex. hover-pop: 2.6 90deg\n// ex. hover-pop: 1.2 45deg true\n\nhover-pop(scale = 1.2, rotate = null, shadow = null)\n  if shadow\n    box-shadow: 0 0 1px transparent\n    \n  &:hover\n    position: relative\n    z-index: 10\n    transform: scale(scale)\n    if shadow\n      box-shadow: 0 0 5px rgba(#000, .3)\n    if rotate\n      transform: scale(scale) rotate(rotate)\n\n// Mixin: Hover Fade\n// \n// On hover, fades the element's opacity down. Takes an amount as an integer\n// between 0 and 1, like opacity normally does. Recommended to be used with\n// transition.\n\n// ex. hover-fade: .5\n\nhover-fade(amount = .5)\n  &:hover\n    opacity: amount\n\n// Mixin: Hover Color\n// \n// Will swap an elements color or background color on hover. Takes a color in\n// any format as the first argument. Will first look for a background color to\n// change, then a color.\n// \n// ex. hover-color: #D45D86\n\nhover-color(color, forceUseColor = false)\n  &:hover\n    if @background and !forceUseColor\n      background-color: color\n    else if @background-color and !forceUseColor\n      background-color: color\n    else if @background-color and !force-use-color\n      background-color: color\n    else if @color\n      color: color\n    else\n      warn('you need to set a color or background color on your element for this to work')\n\n// TODO:\n// *+click-down(pixels)*\n// *+click-shadow(radius)*\n// *+button-interaction(color)*\n","/*\n * The Magnificent Micro Clearfix\n *\n * Useful for clearing floats without structural markup.\n * Prevents margin-collapsing on child elements in most cases.\n *\n * Known issues:\n *\n * 1. For IE 6/7 when applied to an element that contains only left-floated\n *    children the bottom margin on child elements will be collapsed.\n *\n * 2. For Firefox versions prior to 3.5 when applied to the first child element\n *    of body, and the element does not have non-zero padding, extra space will\n *    appear between the body and the first child.\n *\n * See http://nicolasgallagher.com/micro-clearfix-hack/\n * and http://j.mp/bestclearfix\n *\n */\n\nclearfix()\n  &:before\n  &:after\n    content: \"\"\n    display: table\n  &:after\n    clear: both\n  zoom: 1 if support-for-ie\n","// text highlight color\r\nhighlight-color = blue\r\n\r\n// 140 Color Names Supported by All Browsers\r\n// http://www.w3schools.com/htmL/html_colornames.asp\r\n\r\n// Name that Color\r\n// http://chir.ag/projects/name-that-color/#6195ED\r\n\r\n// Brand colors\r\n$white = #fff\r\n$black = #000\r\n$oranje = #f80\r\n$dutch = lighten($oranje, 10)\r\n$offwhite = #f2efea\r\n$super-grey = #5e5e5e\r\n$limey = #9F0\r\n$rusty = #b7410e\r\n\r\n// colors (via http://clrs.cc - slightly modded)\r\nnavy = #001F3F\r\nblue = #0074D9\r\naqua = #7FDBFF\r\nteal = #39CCCC\r\nolive = #3D9970\r\ngreen = #2ECC40\r\nlime = #01FF70\r\nyellow = #FFDC00\r\norange = #FF851B\r\nred = #D13F19\r\nmaroon = #85144B\r\nfuchsia = #F012BE\r\npurple = #B10DC9\r\nwhite = #FFFFFF\r\nsilver = #DDDDDD\r\ngray = #AAAAAA\r\nblack = #222222\r\n\r\n// Color classes\r\n.black\r\n  color $black\r\n\r\n.white\r\n  color $white\r\n  \r\n .offwhite\r\n \tcolor $offwhite\r\n  \r\n.bg-oranje\r\n\tbackground-color $oranje\r\n\t\r\n.bg-dutch\r\n\tbackground-color $dutch\r\n\t\r\n.bg-rusty\r\n\tbackground-color $rusty\r\n","//\n// Global styles and fun stuff\n// –––––––––––––––––––––––––––––––––––––––––––\n\n// Variables\n$maxSiteWidth = 1140px\n$desktopWidth = 940px\n$tabletWidth  = 720px\n$mobileWidth  = 100%\n\n$base-font-size         = 16px\n$global-border-radius   = 4px\n\n// Repsonive scale, reference: http://jenius.github.io/rupture/\n$scale           = 0px 768px 992px 1200px\n$mobile-cutoff   = 768px\n$tablet-cutoff   = 992px\n$desktop-cutoff  = 1200px\n\n// custom image base path for roots mixins\nimg-path = '../img/'\n\n\n// support for old IE\nsupport-for-ie = false\n\n// progressive IE (http://css3pie.com/)\npie-enabled = false\npie-path = '/pie.htc'\n\n//\n// Global layout\n// –––––––––––––––––––––\n\nbody, html\n  background-color: $offwhite\n  margin: 0\n  padding: 0\n\n// Main responsive template styles here\n.container\n  position: relative\n  clear: both\n  cf()\n\n  +below(4)\n    max-width: 100%\n    \n.gutter\n  center($maxSiteWidth)\n  padding: 0 4%  \n\n//\n// Utility classes\n// –––––––––––––––––––––\n\n.circle\n  border-radius: 50%\n\nnav[role='navigation']\n  ul\n    inline-list()\n","/**\n * Style an element as a column with a gutter.\n * @param {number} [ratios=1] - A width relative to its container as a fraction.\n * @param {number} [offset=0] - A offset specified as a fraction (see ratios).\n * @param {number} [cycle=0] - Easily create an nth column grid where cycle equals the number of columns.\n * @param {number} [uncycle=0] - Undo a previous cycle value to allow for a new one.\n * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.\n */\ncolumn(ratios = 1, offset = 0, cycle = 0, uncycle = 0, gutter = jeet.gutter)\n  side = jeet-get-layout-direction()\n  opposite-side = opposite-position(side)\n  column-widths = jeet-get-column(ratios, gutter)\n  margin-last = 0\n  margin-l = margin-last\n  margin-r = column-widths[1]\n\n  unless offset == 0\n    if offset < 0\n      offset *= -1\n      offset = jeet-get-column(offset, column-widths[1])[0]\n      margin-r = margin-last = offset + column-widths[1] * 2\n    else\n      offset = jeet-get-column(offset, column-widths[1])[0]\n      margin-l = offset + column-widths[1]\n\n  cf()\n  float: side\n  clear: none\n  text-align: inherit\n  width: (column-widths[0])%\n  margin-{side}: (margin-l)%\n  margin-{opposite-side}: (margin-r)%\n\n  if uncycle != 0\n    &:nth-child({uncycle}n)\n      margin-{opposite-side}: (margin-r)%\n      float: side\n    &:nth-child({uncycle}n+1)\n      clear: none\n\n  if cycle != 0\n    &:nth-child({cycle}n)\n      margin-{opposite-side}: (margin-last)%\n      float: opposite-side\n    &:nth-child({cycle}n+1)\n      clear: both\n   else\n    &:last-child\n      margin-{opposite-side}: (margin-last)%\n\n/**\n * An alias for the column mixin.\n */\ncol = column\n\n/**\n * Get the width of a column and nothing else.\n * @param {number} [ratios=1] - A width relative to its container as a fraction.\n * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.\n */\ncolumn-width(ratios = 1, gutter = jeet.gutter)\n  return jeet-get-column(ratios, gutter)[0] + '%'\n\n/**\n * An alias for the column-width function.\n */\ncw = column-width\n\n/**\n * Get the gutter size of a column and nothing else.\n * @param {number} [ratios=1] - A width relative to its container as a fraction.\n * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.\n */\ncolumn-gutter(ratios = 1, gutter = jeet.gutter)\n  return jeet-get-column(ratios, gutter)[1] + '%'\n\n/**\n * An alias for the column-gutter function.\n */\ncg = column-gutter\n\n/**\n * Style an element as a column without any gutters for a seamless row.\n * @param {number} [ratios=1] - A width relative to its container as a fraction.\n * @param {number} [offset=0] - A offset specified as a fraction (see ratios).\n * @param {number} [cycle=0] - Easily create an nth column grid where cycle equals the number of columns.\n * @param {number} [uncycle=0] - Undo a previous cycle value to allow for a new one.\n */\nspan(ratio = 1, offset = 0, cycle = 0, uncycle = 0)\n  side = jeet-get-layout-direction()\n  opposite-side = opposite-position(side)\n  span-width = jeet-get-span(ratio)\n  margin-r = 0\n  margin-l = margin-r\n\n  unless offset == 0\n    if offset < 0\n      offset *= -1\n      margin-r = jeet-get-span(offset)\n    else\n      margin-l = jeet-get-span(offset)\n\n  cf()\n  float: side\n  clear: none\n  text-align: inherit\n  width: (span-width)%\n  margin-{side}: (margin-l)%\n  margin-{opposite-side}: (margin-r)%\n\n  if cycle != 0\n    &:nth-child({cycle}n)\n      float: opposite-side\n    &:nth-child({cycle}n + 1)\n      clear: both\n\n  if uncycle != 0\n    &:nth-child({uncycle}n)\n      float: side\n    &:nth-child({uncycle}n + 1)\n      clear: none\n\n/**\n * Reorder columns without altering the HTML.\n * @param {number} [ratios=0] - Specify how far along you want the element to move.\n * @param {string} [col-or-span=column] - Specify whether the element has a gutter or not.\n * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.\n */\nshift(ratios = 0, col-or-span = column, gutter = jeet.gutter)\n  translate = ''\n  side = jeet-get-layout-direction()\n\n  if side == right\n    ratios = jeet-replace-nth(ratios, 0, ratios[0] * -1)\n\n  if col-or-span == column or col-or-span == col or col-or-span == c\n    column-widths = jeet-get-column(ratios, gutter)\n    translate = column-widths[0] + column-widths[1]\n  else\n    translate = jeet-get-span(ratios)\n\n  position: relative\n  left: (translate)%\n\n/**\n * Reset an element that has had shift() applied to it.\n */\nunshift()\n  position: static\n  left: 0\n\n/**\n * View the grid and its layers for easy debugging.\n * @param {string} [color=black] - The background tint applied.\n * @param {boolean} [important=false] - Whether to apply the style as !important.\n */\nedit(color = black, important = false)\n  if important\n    *\n      background: rgba(color, 5%) !important\n  else\n    *\n      background: rgba(color, 5%)\n\n/**\n *  Alias for edit().\n */\ndebug = edit\n\n/**\n * Horizontally center an element.\n * @param {number} [max-width=jeet.max-width] - The max width the element can be.\n * @param {number} [pad=0] - Specify the element's left and right padding.\n */\ncenter(max-width = jeet.max-width, pad = 0)\n  cf()\n  width: auto\n  max-width: max-width\n  float: none\n  display: unquote('block')\n  margin-right: auto\n  margin-left: auto\n  padding-left: pad\n  padding-right: pad\n\n/**\n * Uncenter an element.\n */\nuncenter()\n  max-width: none\n  margin-right: 0\n  margin-left: 0\n  padding-left: 0\n  padding-right: 0\n\n/**\n * Stack an element so that nothing is either side of it.\n * @param {number} [pad=0] - Specify the element's left and right padding.\n * @param {bollean/string} [align=false] - Specify the text align for the element.\n */\nstack(pad = 0, align = false)\n  side = jeet-get-layout-direction()\n  opposite-side = opposite-position(side)\n\n  display: unquote('block')\n  clear: both\n  float: none\n  width: 100%\n  margin-left: auto\n  margin-right: auto\n\n  &:first-child\n    margin-{side}: auto\n\n  &:last-child\n    margin-{opposite-side}: auto\n\n  if pad != 0\n    padding-left: pad\n    padding-right: pad\n\n  if (align is not false)\n    if (align == center) or (align == c)\n      text-align: center\n    if (align == left) or (align == l)\n      text-align: left\n    if (align == right) or (align == r)\n      text-align: right\n\n/**\n * Unstack an element.\n */\nunstack()\n  side = jeet-get-layout-direction()\n  opposite-side = opposite-position(side)\n\n  text-align: side\n  display: inline\n  clear: none\n  width: auto\n  margin-left: 0\n  margin-right: 0\n\n  &:first-child\n    margin-{side}: 0\n\n  &:last-child\n    margin-{opposite-side}: 0\n\n/**\n * Center an element on either or both axes.\n * @requires A parent container with relative positioning.\n * @param {string} [direction=both] - Specify which axes to center the element on.\n */\nalign(direction = both)\n  position: absolute\n  transform-style: preserve-3d\n\n  if (direction == horizontal) or (direction == h)\n    left: 50%\n    transform: translateX(-50%)\n  else if (direction == vertical) or (direction == v)\n    top: 50%\n    transform: translateY(-50%)\n  else\n    top: 50%\n    left: 50%\n    transform: translate(-50%, -50%)\n\n/**\n * Apply a clearfix to an element.\n */\ncf()\n  *zoom: 1\n\n  &:before, &:after\n    content: ''\n    display: table\n\n  &:after\n    clear: both\n","base-font-size ?= 16px\nrasterise-media-queries ?= false\n\nrupture = {\n  rasterise-media-queries: rasterise-media-queries\n  mobile-cutoff: 400px\n  desktop-cutoff: 1050px\n  hd-cutoff: 1800px\n  enable-em-breakpoints: false\n  base-font-size: base-font-size\n  anti-overlap: false\n  density-queries: 'dppx' 'webkit' 'moz' 'dpi'\n  retina-density: 1.5\n  use-device-width: false\n}\nrupture.scale = 0 (rupture.mobile-cutoff) 600px 800px (rupture.desktop-cutoff) (rupture.hd-cutoff)\nrupture.scale-names = 'xs' 's' 'm' 'l' 'xl' 'hd'\n\n-is-string(val)\n  if typeof(val) is not 'unit'\n    if val is a 'string' or val is a 'ident'\n      true\n    else\n      false\n  else\n    false\n\n-get-scale-number(scale-name)\n  for list-item, i in rupture.scale-names\n    if list-item is scale-name\n      return i + 1\n  return false\n\n-convert-to(to-unit, value, context = rupture.base-font-size)\n  from-unit = unit(value)\n  return value if to-unit is from-unit\n  if to-unit in ('em' 'rem')\n    return value if from-unit in ('em' 'rem')\n    return unit((value / context), to-unit)\n  if to-unit is 'px'\n    return unit((value * context), 'px')\n\n-on-scale(n)\n  return unit(n) is ''\n\n-larger-than-scale(n)\n  return (n > (length(rupture.scale) - 1)) and -on-scale(n)\n\n-is-zero(n)\n  return n is 0\n\n-overlap-shift(anti-overlap, n)\n  shift-unit = unit(n)\n  anti-overlap = 0px unless anti-overlap\n  anti-overlap = 1px if anti-overlap is true\n  if length(anti-overlap) is 1\n    return -convert-to(shift-unit, anti-overlap)\n  for val in anti-overlap\n    return val if unit(val) is shift-unit\n\n-adjust-overlap(anti-overlap, n, side = 'min')\n  -shift = -overlap-shift(anti-overlap, n)\n  if (side is 'min' and -shift > 0) or (side is 'max' and -shift < 0)\n    n = n + -shift\n  return n\n\n-is-positive(n)\n  return n >= 0\n\n-density-queries(density)\n  if typeof(density) is not 'unit'\n    if not -is-string(density)\n      density = '%s' % density\n  density = rupture.retina-density if density is 'retina'\n  queries = ()\n  for query in rupture.density-queries\n    if query is 'webkit'\n      push(queries, '(-webkit-min-device-pixel-ratio: %s)' % (density))\n    else if query is 'moz'\n      push(queries, '(min--moz-device-pixel-ratio: %s)' % (density))\n    else if query is 'o'\n      push(queries, '(-o-min-device-pixel-ratio: %s/1)' % (density))\n    else if query is 'ratio'\n      push(queries, '(min-device-pixel-ratio: %s)' % (density))\n    else if query is 'dpi'\n      if -is-string(density)\n        density=convert(density)\n      push(queries, '(min-resolution: %sdpi)' % (round(density * 96, 1)))\n    else if query is 'dppx'\n      push(queries, '(min-resolution: %sdppx)' % (density))\n  return queries\n\ncreate-fallback-class(selected, class)\n  /{'' + class + ' ' + selected}\n    {block}\n\n// +between(min, max)\n// usage (scale can be mixed with custom values):\n//   - +between(1, 3) scale:scale\n//   - +between(0, 3) 0 width:scale\n//   - +between(200px, 500px) custom:custom\n//   - +between(0, 300px) 0 width:custom\n//   - +between(1, 300px) scale:custom\n//   - +between(200px, 4) custom:scale\n\nbetween(min, max, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  selected = selector()\n\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  if -is-string(min)\n    min = -get-scale-number(min)\n  if -is-string(max)\n    max = -get-scale-number(max)\n\n  -min = rupture.scale[min - 1] unless -is-zero(min) or (not -on-scale(min))\n  -max = rupture.scale[max] unless not -on-scale(max)\n  -min ?= min\n  -max ?= max\n\n  if (rupture.rasterise-media-queries)\n    if not (density or -max or orientation)\n      {block}\n  else\n    condition = 'only screen'\n    use-device-width = use-device-width ? 'device-' : ''\n    unless -min is 0\n      -min = -convert-to('em', -min) if rupture.enable-em-breakpoints\n      -min = -adjust-overlap(anti-overlap, -min, side: 'min')\n      condition = condition + ' and (min-' + use-device-width + 'width: %s)' % (-min)\n    unless -larger-than-scale(max)\n      -max = -convert-to('em', -max) if rupture.enable-em-breakpoints\n      -max = -adjust-overlap(anti-overlap, -max, side: 'max')\n      condition = condition + ' and (max-' + use-device-width + 'width: %s)' % (-max)\n    if orientation\n      condition = condition + ' and (orientation: %s)' % (orientation)\n    if density\n      conditions = ()\n      for query in -density-queries(density)\n        push(conditions, condition + ' and %s' % (query))\n      condition = join(', ', conditions)\n    @media condition\n      {block}\n  if fallback-class\n    +create-fallback-class(selected, fallback-class)\n      {block}\n\nat(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nfrom-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, length(rupture.scale), anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nabove = from-width\n\nto-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(1, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nbelow = to-width\n\nmobile(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +below(rupture.mobile-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ntablet(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(rupture.mobile-cutoff, rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndesktop(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nhd(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.hd-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndensity(density, orientation = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    conditions = ()\n    for query in -density-queries(density)\n      condition = 'only screen and %s' % (query)\n      if orientation\n        condition = condition + ' and (orientation: %s)' % (orientation)\n      push(conditions, condition)\n    condition = join(', ', conditions)\n    @media condition\n      {block}\n    if fallback-class\n      +create-fallback-class(selected, fallback-class)\n        {block}\n\npixel-ratio = density\n\nretina(orientation = null, fallback-class = null)\n  +density('retina', orientation, fallback-class)\n    {block}\n\nlandscape(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: landscape, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: landscape)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n\nportrait(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: portrait, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: portrait)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n","//\r\n// Typography\r\n// –––––––––––––––––––––––––––––––––––––––––––\r\n\r\n// font stack (add your own!)\r\n// helvetica-neue = \"Helvetica Neue\", HelveticaNeue, Helvetica, Arial, sans-serif\r\n// helvetica = \"Helvetica Neue\", Helvetica, Arial, sans-serif\r\n// georgia = Georgia, Cambria, \"Times New Roman\", Times, serif\r\n// lucidia-grande = \"Lucida Grande\", Tahoma, Verdana, Arial, sans-serif\r\n// monospace = unquote(\"'Bitstream Vera Sans Mono', Consolas, Courier, monospace\")\r\n// verdana = Verdana, Geneva, sans-serif\r\n\r\n$main-font = \"Raleway\", \"Helvetica Neue\", \"Arial\", sans-serif\r\n\r\n.defaultType\r\n  font-family: $main-font\r\n  font-weight: normal\r\n  font-style: normal\r\n  -webkit-font-smoothing: antialiased\r\n\r\n\r\nbody, p, a, h1, h2, h3, h4, h5, h6,\r\nsmall, em, strong, input, button\r\n  @extends .defaultType\r\n\r\n// Font Sizes\r\n// -------------------------------------------\r\n$large-font-size = 2.75vw\r\n$medium-font-size = 1.6vw\r\n$small-font-size = 1vw\r\n$smaller-font-size = 0.85vw\r\n$smallest-font-size = 0.75vw\r\n\r\n// Letterspacing\r\n// –––––––––––––––––––––––––––––––––––––––––––\r\n$tight-spacing = -.045em\r\n$snug-spacing = -.02em\r\n$more-spacing = .1em\r\n\r\n\r\n// Headings\r\n// –––––––––––––––––––––––––––––––––––––––––––\r\n\r\nh1\r\n  h1(4)\r\nh2\r\n  h2(3)\r\nh3\r\n  h3(2.25)\r\nh4\r\n  h4(1.75)\r\nh5\r\n  h5(1.375)\r\nh6\r\n  h6(1.125)\r\n\r\nh1, h2, h3, h4, h5, h6\r\n  display: block\r\n  margin: 1rem 0\r\n  font-weight: normal\r\n  line-height: 1.3em\r\n\r\n  // Remove the margin-top on all :first-child headers\r\n  // as the padding on the parent *almost* always makes up for it\r\n  &:first-child\r\n    margin-top: 0\r\n\r\n  // Standardize margin-bottom on headers\r\n  margin-bottom: 1rem\r\n\r\n  // links need to inherit the heading color\r\n  a\r\n    color: inherit\r\n    \r\na\r\n  cursor pointer\r\n    \r\nlabel \r\n  display block\r\n  font-size $small-font-size\r\n  font-weight 700\r\n  text-transform uppercase \r\n\r\nblockquote\r\n  border-left none\r\n  font-size $medium-font-size\r\n  font-weight 700\r\n\r\np\r\n  font-size $small-font-size\r\n  line-height: 1.1em\r\n  \r\n::selection\r\n  background $oranje\r\n  \r\n::moz-selection\r\n  background $oranje\r\n\r\n\r\n// ligatures\r\nligatures = false\r\n\r\n// vertical rhythm\r\nbase-line-height = rem(24px)\r\ndefault-rhythm-border-style = solid\r\nrelative-font-sizing = true\r\nround-to-nearest-half-line = false\r\nmin-line-padding = rem(2px)\r\n\r\n// responsive font \r\nlabel\r\n  +below(800px)\r\n    font-size 12px\r\n    \r\n  +tablet()\r\n    font-size 16px\r\n    \r\np \r\n  +below(800px)\r\n    font-size 11px\r\n    \r\n  +tablet()\r\n    font-size 14px\r\n    \r\nblockquote\r\n  +below(400px)\r\n    font-size 12px","//\n// Animations – defaults and variables\n// –––––––––––––––––––––––––––––––––––––––––––\n\n$duration = 0.3s\n$easing   = ease-in-out\n\n.animated\n  animation-duration: .5s\n  animation-fill-mode: both\n\n\n@keyframes overscale\n  0%\n    transform: scale(0)\n\n  70%\n    transform: scale(1.1)\n\n  100%\n    transform: scale(1)\n\n.over-scale\n  animation-name overscale\n  animation-duration .6s\n  animation-delay .3s\n  animation-timing-function $easing\n\n// Add individual animations as needed\n\n.delay-1\n  animation-delay: .25s\n\n.delay-2\n  animation-delay: .5s\n  \n@keyframes bounce \n  0%, 20%, 50%, 80%, 100% \n    transform: translateY(0)\n  40% \n    transform: translateY(-0.4vw)\n  60% \n    transform: translateY(-0.2vw)\n\n.bounce\n  animation(bounce 2s infinite)\n","//\n// Footer Styles\n// –––––––––––––––––––––––––––––––––––––––––––\n\nfooter[role=\"contentinfo\"] \n\tbackground-color $super-grey\n\tbackground-image url('../img/rockypoint.gif')\n\tbackground-position center bottom\n\tbackground-repeat no-repeat\n\tbackgrouns-size cover\n\tdisplay inline-block\n\theight 30vh\n\tmargin-top 5vw\n\tpadding 2%\n\ttext-align center\n\twidth 100%\n\t\n\t+below(400px)\n\t\tbackground-image none\n\t\theight 16vh\n\t\n\t.footer-item\n\t\t\n\t\tul\n\t\t\tcolor $offwhite\n\t\t\tfont-size $smaller-font-size\n\t\t\t\n\t\t\tli \n\t\t\t\tlist-style-type none\n\t\t\t\t\n\t\t\t\tlabel\n\t\t\t\t\tcursor pointer\n\t\t\t\t\n\t\t\t\ta \n\t\t\t\t\tcolor $offwhite\n\t\n\tp \n\t\tcolor $offwhite\n\t\tfont-size $smallest-font-size\n\t\t\n\t\t+below(800px)\n\t\t\tfont-size 12px\n\t\t\n\t\t+below(400px)\n\t\t\tfont-size 8px","//\n// Header styles\n// –––––––––––––––––––––––––––––––––––––––––––\n\nheader[role=\"banner\"]\n  display inline-block\n  height 4vh\n  margin-bottom 2vh\n  padding 24px 0\n  width 100%\n  \n  nav\n    display block\n    text-align center\n    \n    span \n      box-sizing border-box\n      display inline-block\n      font-size $small-font-size\n      letter-spacing $more-spacing\n      text-transform uppercase\n      width 20% \n      \n      +tablet()\n        font-size 16px\n      \n      +below(800px)\n        font-size 11px\n      \n      +below(400px)\n        font-size 11px\n             \n      a \n        color $super-grey\n        cursor pointer\n        transition(color, $duration, $easing)     \n      \n        &:hover\n          color black\n          transition(color, $duration, $easing)\n ","//\n// Button base styles and mixins\n// ––––––––––––––––––––––––––––––––––––––––––––––––\n\n.btn\n  button()\n  \n","// -------\n// Buttons\n// -------\n\n// Function: highlight\n// \n// Adds a light brighter line across the top of the element for a perspective\n// effect. Takes an optional argument for strength, which takes a value between\n// 0 and 1.\n// \n// ex. highlight()\n// ex. highlight: .7\n\n-highlight(strength = .3)\n  box-shadow(s(\"inset 0 1px 0 %s\", rgba(255,255,255,strength)))\n\n// Function: parse\n// Used internally for setting button sizes.\n\n-parse(size)\n  if size == \"small\"\n    return 10\n  else if size == \"medium\"\n    return 13\n  else if size == \"large\"\n    return 18\n  else\n    return size\n\n// Mixin: Button\n// \n// Creates a very basic looking button style. Three optional params:\n// - color: Takes any color, defaults to the default global color\n// - size: Takes 'small', 'medium', 'large', or an integer. The numbers reflect\n//   the font size for the text inside the button, but scales all other aspects\n//   as well (corners, padding, etc).\n// - textColor: Takes any color for the button text, defaults to trying to\n//   detect whether the background is dark or light and setting the opposite.\n// \n// ex. button()\n// ex. button: blue\n// ex. button: #D4513B\n// ex. button: green large\n// ex. button: #4C82D4 24\n\nbutton(color = default-color, size = \"medium\", textColor = null)\n\n  // color detection and changes\n  textColor = (light(color) ? #494949 : #fff) unless textColor\n  parsed_size = -parse(size)\n\n  // now that we've got numbers, let's work some proportions\n  height = round((parsed_size * 1.53px) / 2)\n  width = round(((parsed_size * 1.53px) * 2.2) / 2)\n\n  // dynamically calculated styles\n  font-size: unit(parsed_size, 'px')\n  padding: unit(height, 'px') unit(width, 'px')\n  border-radius: round(parsed_size / 4.33333px)\n  background-color: color\n  color: textColor\n\n  // constant styles\n  cursor: pointer\n  font-weight: bold\n  font-family: font-stack\n  line-height: 1em\n  text-align: center\n  text-decoration: none\n  display: inline-block\n  border none\n  &:hover, &:focus\n    background-color: darken(color, 5%)\n    color: darken(textColor, 3%)\n\n  &:active\n    background-color: darken(color, 10%)\n\n// Mixin: Glossy Button\n// \n// Creates a more fancy looking button style. Five optional params:\n// - color: Takes any color, defaults to the default global color\n// - size: Takes 'small', 'medium', 'large', or an integer. The numbers reflects\n//   the font size for the text inside the button, but scales all other aspects\n//   as well.\n// - textColor: Takes any color for the button text, defaults to trying to\n//   detect whether the background is dark or light and setting the opposite.\n// - shadowColor: Color for the text shadow, default is the contrast detection\n//   described above.\n// - hoverColor: Color of the text shadow when hovered. Default is contrast\n//   detection as described above. You probably don't need to use this.\n// \n// ex. glossy-button()\n// ex. glossy-button: blue\n// ex. glossy-button: #D4513B\n// ex. glossy-button: green large\n// ex. glossy-button: #4C82D4 24\n\nglossy-button(color = default-color, size = \"medium\", textColor = null, shadowColor = null, hoverColor = null)\n\n  // color detection and changes\n  if textColor\n    darkText = light(textColor) ? true : false\n  else\n    darkText = light(color) ? false : true\n    textColor = darkText ? white : #494949\n\n  shadowColor = darkText ? rgba(#000,.1) : rgba(#fff,.3) unless shadowColor\n  hoverColor = darkText ? rgba(#000,.2) : rgba(#fff,.5) unless hoverColor\n  downShadow = darkText ? 0 -1px 1px rgba(#000,.2) : 1px 1px 1px rgba(#fff,.6)\n\n  // parse words, make sure it's a number\n  parsed_size = -parse(size)\n\n  // now that we've got numbers, let's work some proportions\n  height = round((parsed_size*1.53px)/2)\n  width = round(((parsed_size*1.53px)*2.2)/2)\n\n  // dynamically calculated styles\n  font-size: unit(parsed_size, 'px')\n  padding: unit(height, 'px') unit(width, 'px')\n  border-radius: round(parsed_size/4.33333px)\n  gradient: color\n  text-shadow: 1px 1px 1px shadowColor\n  border: s('1px solid %s', darken(color, 10%))\n  color: textColor\n\n  // constant styles\n  -highlight()\n  cursor: pointer\n  font-weight: bold\n  font-family: font-stack\n  line-height: 1em\n  text-align: center\n  text-decoration: none\n  display: inline-block\n\n  &:hover, &:focus\n    background-position: 0 unit(height * -1, 'px')\n    color: darken(textColor, 3%)\n    text-shadow: 1px 1px 1px hoverColor\n\n  &:active\n    box-shadow(s(\"inset 0 1px %s %s\", parsed_size/2.6px, rgba(darken(color, 25%),.6)))\n    text-shadow: downShadow\n    border-color: darken(color, 18%)\n\n// Mixin: Button Disabled\n// \n// Add this mixin to a button and it will make the button appear to be disabled.\n// Try attaching to a class like .disabled and adding that class to the button.\n// Takes no arguments.\n// \n// ex. .disabled\n//       button-disabled()\n\nbutton-disabled()\n  background: #ccc\n  border-color: darken(#ccc, 10%)\n  opacity: .5\n  cursor: default\n  no-select()\n\n  &:hover\n    background: #ccc\n    background-position: 0 0\n    \n  &:active\n    background: #ccc\n    box-shadow: none\n    border-color: darken(#ccc, 10%)\n    text-shadow: 1px 1px 1px rgba(#000,.1)\n\n// Additive Mixin: Buttons\n// \n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n// \n// This mixin makes it such that you can use classes to define buttons on your\n// page.\n// - .btn: creates a simple button\n// - .btn-fancy: creates a fancy button\n// - .disabled: disables an existing button (will only work on .btn and\n//   .btn-simple)\n\nbuttons()\n  .btn\n    transition()\n    button()\n  .btn-fancy\n    transition()\n    glossy-button()\n  .btn.disabled, .btn-simple.disabled\n    button-disabled()\n","body.error\n  border 5px solid tomato\n  margin 0\n  debug()\n\n  h1\n    hover-pop()\n    col(1/2)\n",".hero\n\tdisplay block\n\t// height 88vh\n\theight 190vh\n\twidth 100%\n\t\n\t+below(400px)\n\t\theight auto\n\t\tpadding 0\n\n\t.masthead\n\t\t// background-image url('../img/masthead.gif')\n\t\t// background-repeat no-repeat\n\t\t// background-size contain \n\t\t// background-position left top\n\t\t// bottom 0\n\t\tfloat left\n\t\theight 100%\n\t\tposition relative\n\t\ttop 0\n\t\twidth 21%\n\t\t\n\t\t+below(400px)\n\t\t\tdisplay none\n\t\t\n\t\timg \n\t\t\theight 190vh\n\t\t\tmax-width 300px\n\n\t.splash\n\t\tdisplay inline-block\n\t\tfloat right\n\t\theight 100vh\n\t\tposition relative\n\t\twidth 75%\n\t\tcf()\n\t\t\n\t\t+below(400px)\n\t\t\theight 25vh\n\t\t\twidth 100%\n\t\t\n\t\t.logo\n\t\t\tbackground-image url('../img/logo2.svg')\n\t\t\tbackground-repeat no-repeat\n\t\t\tbackground-size contain \n\t\t\tbackground-position center center\n\t\t\tdisplay block\n\t\t\tfloat right \n\t\t\theight 25vw\n\t\t\tposition relative\n\t\t\ttop calc(50% - 2vh)\n\t\t\ttransform: translateY(calc(-50% - 2vh)) \n\t\t\twidth 100%\n\t\t\t\n.content-block\n\tdisplay inline-block\n\theight auto\n\tpadding-bottom 2%\n\twidth 100%\n\t\n\t&.has-separator\n\t\tbackground-image url('../img/separator.svg')\n\t\tbackground-position center top\n\t\tbackground-repeat no-repeat\n\t\tbackground-size 27%\n\t\t// padding 10vw\n\t\t\t\n\t\tsection \n\t\t\tmargin-top 7vw\n\t\n\t&.quick-content\n\t\tfloat right\n\t\theight auto\n\t\tmargin-bottom 2vw\n\t\t// padding-bottom 0\n\t\twidth 75%\n\t\t\n\t\t+below(400px)\n\t\t\twidth 100%\n\t\t\t\t\t\n\t\t&:last-of-type\n\t\t\theight auto\n\t\t\n\t\tsection \n\t\t\th3, blockquote \n\t\t\t\ttext-align right\n\t\t\t\t\n\t\t\t\t+below(400px)\n\t\t\t\t\ttext-align left\n\t\t\t\t\n\t\t\tp \n\t\t\t\tfloat right\n\t\t\t\ttext-align justify\n\t\t\t\twidth 90%\n\t\t\t\t\n\t\t\t\t+below(400px)\n\t\t\t\t\twidth 100%\n\t\t\t\t\n\t\t\tblockquote\n\t\t\t\tdisplay block\n\t\t\t\tfloat right\n\t\t\t\t\n\t\t\t\t+below(400px)\n\t\t\t\t\tpadding-left 0\n\t\t\t\n\t\t\t.quick-content-blurbs\n\t\t\t\tdisplay block\n\t\t\t\twidth 100%\n\t\t\t\t\n\t\t\t\t.blurb \n\t\t\t\t\tcol(1/2)\n\t\t\t\t\tmargin-bottom 24px\n\t\t\t\t\ttext-align right\n\t\t\t\t\ttext-transform uppercase\n\t\t\t\t\t\n\t\t\t\t\t+below(400px)\n\t\t\t\t\t\ttext-align left\n\t\t\t\t\t\n\t\t\t\t\t&:nth-of-type(2)\n\t\t\t\t\t\tmargin-right 0%\n\t\t\t\t\t\tfloat right\n\t\t\t\t\t\n\t\t\t\t\tlabel \n\t\t\t\t\t\tmargin 4px 0\n\t\t\t\t\t\t\n\t\t\t\t\tspan \n\t\t\t\t\t\tborder-bottom 1px solid black\n\t\t\t\t\t\tborder-left 1px solid black\n\t\t\t\t\t\tdisplay block\n\t\t\t\t\t\tfloat right\n\t\t\t\t\t\tfont-size $small-font-size\n\t\t\t\t\t\twidth 80%\n\t\t\t\t\t\t\n\t\t\t\t\t\t+below(800px)\n\t\t\t\t\t\t\tfont-size 10px\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t+below(400px)\n\t\t\t\t\t\t\tborder none\n\t\t\t\t\t\t\tfont-size 11px\n\t\t\t\t\t\t\twidth 100%\t\t\n\t\t\n\tsection\n\t\tpadding-top 2%\n\t\t\n\t\th3\n\t\t\tfont-size $large-font-size\n\t\t\ttext-transform uppercase\n\t\t\t\n\t\t\t+below(400px)\n\t\t\t\tfont-size 20px\n\t\t\t\n\t.skills\n\t\tcol(1/3, cycle: 4)\n\t\tbackground-color transparent\n\t\tdisplay inline-block\n\t\tmargin-bottom 2%\n\t\tpadding 2%\n\t\ttransition(background-color, $duration, $easing)\n\t\t\n\t\t+below(400px)\n\t\t\tstack()\n\t\t\n\t\t&:last-child\n\t\t\tfloat right\n\t\t\tmargin-right 0%\n\t\t\t\n\t\t&.highlight \n\t\t\tbackground-color rgba(255, 255, 255, 0.45)\n\t\t\ttransition(background-color, $duration, $easing)\n\t\t\t\n\t\t.skills-track\n\t\t\tbackground repeating-linear-gradient(45deg, transparent, transparent 5px, silver 5px, silver 10px)\n\t\t\tborder-radius 3px\n\t\t\theight 12px\n\t\t\tmargin 12px 0 24px 0\n\t\t\tposition relative\n\t\t\twidth 100%\n\t\t\t\n\t\t\t.skills-highlight\n\t\t\t\tbackground-color $oranje\n\t\t\t\tborder-radius 3px\n\t\t\t\tfloat left\n\t\t\t\theight 12px\n\t\t\t\tleft 0\n\t\t\t\tposition absolute\n\t\t\t\ttop 0\n\t\t\t\twidth 0%\n\t\t\t\t\n\t\t\t.skills-diamond\n\t\t\t\tbackground-color $white\n\t\t\t\tborder 1px solid $oranje\n\t\t\t\tborder-radius 1px\n\t\t\t\tfloat right\n\t\t\t\theight 12px\n\t\t\t\tleft 6px\n\t\t\t\tposition relative\n\t\t\t\ttop 0\n\t\t\t\twidth 12px\n\t\t\t\ttransform rotate(45deg)\n\t\t\n\t\t.see-details\n\t\t\tcolor $oranje\n\t\t\tfont-size $small-font-size\n\t\t\theight auto\n\t\t\tmin-height 30px\n\t\t\tposition relative\n\t\t\twidth 100%\n\t\t\t\n\t\t\t+below(800px)\n\t\t\t\tfont-size 12px\n\t\t\t\n\t\t\t> span\n\t\t\t\tcursor pointer\n\t\t\t\topacity 1\n\t\t\t\ttransition(opacity, $duration, $easing)\n\n\t\t\t\t&.hidden \n\t\t\t\t\topacity 0\n\t\t\t\t\ttransition(opacity, $duration, $easing)\n\t\t\t\n\t\t\t.close \n\t\t\t\tdisplay inline-block\n\t\t\t\tfont-size $large-font-size\n\t\t\t\topacity 0\n\t\t\t\tposition absolute\n\t\t\t\tright 0\n\t\t\t\ttop -18px\n\t\t\t\ttransition(opacity, $duration, $easing)\n\t\t\t\tvertical-align top\n\t\t\t\t\n\t\t\t\t+below(800px)\n\t\t\t\t\tfont-size 32px\n\t\t\t\t\n\t\t\t\t&.visible\n\t\t\t\t\topacity 1\n\t\t\t\t\ttransition(opacity, $duration, $easing)\n\t\t\t\n\t\t\t.details \n\t\t\t\tcolor black\n\t\t\t\tdisplay block\n\t\t\t\theight auto\n\t\t\t\tmargin 12px 0\n\t\t\t\tmax-height 0\n\t\t\t\tmin-height 0\n\t\t\t\toverflow hidden\n\t\t\t\ttransition(all, $duration, $easing)\n\t\t\t\twidth 100%\n\t\t\t\t\n\t\t\t\t&.open\n\t\t\t\t\tmax-height 28vw //220px \n\t\t\t\t\tmin-height 18vw //190px\n\t\t\t\t\ttransition(all, $duration, $easing)\n\t\t\t\t\t\n\t\t\t\t\t+below(400px)\n\t\t\t\t\t\tmax-height 38vw\n\t\t\t\t\t\tmin-height 28vw\n\t\t\t\t\n\t\t\t\tul \n\t\t\t\t\tmargin 0\n\t\t\t\t\tpadding-left 0\n\t\t\t\t\t\n\t\t\t\t\tli\n\t\t\t\t\t\tlist-style-type none\n\t\t\t\t\t\tpadding 0.250rem 0\n\t\t\t\t\t\t\n\t\t\t\t\t\t+below(800px)\n\t\t\t\t\t\t\tpadding 0\n\t\t\t\t\t\t\n\t\t\t\tp \n\t\t\t\t\tmargin 1rem 0 0 0\n\t\t\t\t\t\n\t\t\t\t\tstrong\n\t\t\t\t\t\tdisplay block\n\t\t\t\t\t\tfont-weight 700\n\t\t\t\t\t\tmargin-top 0.250rem\n\t\t\t\t\t\t\n\t.work\n\t\tcol(1/2)\n\t\tdisplay inline-block\n\t\t\n\t\t+below(400px)\n\t\t\tstack()\n\t\t\t\n\t\t\t&:last-of-type\n\t\t\t\tmargin-top 5vw\n\t\t\n\t\t.work-clients\n\t\t\tdisplay inline-block\n\t\t\tbackground-image url('../img/logos01.gif')\n\t\t\tbackground-repeat no-repeat\n\t\t\tbackground-position center top\n\t\t\tbackground-size 100%\n\t\t\tfloat left\n\t\t\theight 9vw\n\t\t\tmargin 2vw 0\n\t\t\twidth 100%\n\t\t\t\n\t\t\t+below(400px)\n\t\t\t\tdisplay none\n\t\t\t\n\t\t\t&:last-of-type\n\t\t\t\tbackground-image url('../img/logos02.gif')\n\t\t\t\theight 5vw\n\t\t\t\tmargin-top 0\n\t\t\t\t\n\t\tp \n\t\t\tdisplay inline-block\n\t\t\n\t\th5\t\n\t\t\tmargin 0 0 0.25em 0\n\t\t\ttext-align right\n\t\t\ttext-transform uppercase\n\t\t\t\n\t\t\t+below(400px)\n\t\t\t\ttext-align left\n\t\t\t\n\t\t.work-experience, .open-source \n\t\t\tdisplay inline-block\n\t\t\tmargin 2% 0 4% 0 \n\t\t\twidth 100%\n\t\t\t\n\t\t\t.work-experience-item\n\t\t\t\tbackground-image url('../img/emma.png')\n\t\t\t\tbackground-position 0% center\n\t\t\t\tbackground-repeat no-repeat\n\t\t\t\tbackground-size contain\n\t\t\t\t\n\t\t\t\t&:hover \n\t\t\t\t\tbackground-position 1% center\n\t\t\t\t\n\t\t\t\t&:nth-of-type(2)\n\t\t\t\t\tbackground-image url('../img/de.png')\n\t\t\t\t\n\t\t\t\t&:nth-of-type(3)\n\t\t\t\t\tbackground-image url('../img/io.png')\n\t\t\t\t\n\t\t\t\t&:last-of-type\n\t\t\t\t\tbackground-image url('../img/mma.png')\n\t\t\t\n\t\t\t.work-experience-item, .open-source-item\n\t\t\t\tbackground-color transparent\n\t\t\t\tborder-bottom 1px solid silver\n\t\t\t\tdisplay block \n\t\t\t\tfloat right\n\t\t\t\tline-height 1.1\n\t\t\t\tpadding 2% 0\n\t\t\t\ttext-align right\n\t\t\t\ttransition(all, $duration, $easing)\n\t\t\t\twidth 60%\n\t\t\t\t\n\t\t\t\t+below(400px)\n\t\t\t\t\twidth 100%\n\t\t\t\t\n\t\t\t\t&:hover\n\t\t\t\t\tbackground-color rgba(255, 255, 255, 0.5)\n\t\t\t\t\ttransition(all, $duration, $easing)\n\t\t\t\t\n\t\t\t\t&:first-of-type\n\t\t\t\t\tmargin-top -2%\n\t\t\t\t\n\t\t\t\t&:last-of-type\n\t\t\t\t\tborder-bottom none\n\t\t\t\t\n\t\t\t\tspan\n\t\t\t\t\tdisplay block\n\t\t\t\t\tfont-size $smaller-font-size\n\t\t\t\t\tmargin-top 1%\n\t\t\t\t\t\n\t\t\t\t\t+below(800px)\n\t\t\t\t\t\tfont-size 8px\n\t\t\t\t\t\n\t\t\t\t\t+below(400px)\n\t\t\t\t\t\tfont-size 11px\n\t\t\t\t\t\t\n\t\t\t.open-source-item\n\t\t\t\t+below(400px)\n\t\t\t\t\ttext-align left\t\n\t\t\t\t\t\n\t.contact-options\n\t\tmargin-top 2%\n\t\tul\n\t\t\tinline-list()\n\t\t\t\n\t\t\tlabel\n\t\t\t\tcursor pointer\n\t\t\t\n.scroll-helper\n\tbottom 3vw\n\tcursor pointer\n\tdisplay block\n\tfont-size $small-font-size\n\theight 1.5vw\n\tposition fixed\n\ttext-align center\n\twidth 100%\n\t\n\t+below(800px)\n\t\tfont-size 10px\n\t\n\t+below(400px)\n\t\tdisplay none\n\t\n\t.scroll-helper-arrow\n\t\tposition absolute\n\t\theight 1.5vw\n\t\tmargin-left 12px\n\t\twidth 2vw\n\t\t\n\t\t.arrow \n\t\t\tdisplay inline-block\n\t\t\tcursor pointer\n\t\t\theight 0.75vw\n\t\t\tposition relative\n\t\t\twidth 1.5vw\n"]}